" ============================================================================
"  Plugins
" ============================================================================

filetype plugin indent on
runtime ftplugin/man.vim

" vim-plug
let g:plug_window = 'tabe'

call plug#begin('~/.vim/plugged')
let fzf_hook = 'yes | ./install --no-fish'

" light plugins
Plug 'bling/vim-airline'
Plug 'bronson/vim-visual-star-search'
Plug 'chriskempson/base16-vim'
Plug 'godlygeek/tabular'
Plug 'jeffkreeftmeijer/vim-numbertoggle'
Plug 'jiangmiao/auto-pairs'
Plug 'tomtom/tcomment_vim'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-sleuth'
Plug 'tpope/vim-surround'
Plug 'vim-scripts/DoxygenToolkit.vim'
" medium plugins
Plug 'junegunn/fzf.vim'
  Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': fzf_hook }
Plug 'tomasr/molokai'
" heavy plugins
Plug 'mhinz/vim-startify'
" Plug 'yuttie/comfortable-motion.vim'
call plug#end()

" Airline
let g:airline#extensions#tabline#enabled = 1

" Startify
let g:startify_files_number = 20
let g:startify_relative_path = 1

" ============================================================================
"  Appearance
" ============================================================================

syntax enable

" set Vim-specific sequences for RGB colors
" https://github.com/vim/vim/issues/993#issuecomment-255651605
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
colors base16-default-dark
set termguicolors

set cursorline
set hlsearch
set ignorecase
set nolist wrap linebreak breakat&vim " line wrap between words
set nowrap
set number relativenumber " hybrid line numbers
set ruler
set showcmd
set smartcase

" 78 char limit
set colorcolumn=79
highlight ColorColumn ctermbg=0 guibg=lightgrey
set background=dark

" Signature files for SML
au BufRead,BufNewFile *.sig setlocal filetype=sml

" ============================================================================
"  Controls
" ============================================================================

let mapleader=","
noremap \ ,

set backspace=indent,eol,start " backspace over everything in insert mode
set hidden
set incsearch
set tags=tags;/ " search parent dirs for ctags file
set wildmenu " Display all matching files when we tab complete

let usrdict_fpath = "/usr/share/dict/words"
if filereadable(usrdict_fpath)
  set dictionary+=usrdict_fpath
endif

" Trim trailing whitespace: https://vi.stackexchange.com/a/456
fun! TrimWhitespace()
    let l:save = winsaveview()
    %s/\s\+$//e
    call winrestview(l:save)
endfun
command! TrimWhitespace call TrimWhitespace()
